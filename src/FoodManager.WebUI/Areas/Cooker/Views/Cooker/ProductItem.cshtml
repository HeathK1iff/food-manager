@using FoodManager.WebUI.Areas.Cooker.Models
@using FoodManager.WebUI.Extensions
@using Microsoft.AspNetCore.Html
@model ProductItemIndexModel

@{
    Layout = "_CookerLayout";
    ViewData["Title"] = "Refrigerator";
}

@if (!string.IsNullOrEmpty(@TempData["ErrorMessage"]?.ToString()))
{
    <div id="alert-message" class="alert alert-danger" role="alert">@TempData["ErrorMessage"]</div>
}
else
{
    @if (!string.IsNullOrEmpty(@TempData["Message"]?.ToString()))
    {
        <div id="alert-message" class="alert alert-success" role="alert">@TempData["Message"]</div>
    }
}

@if (@Model.ProductAction is not ProductAction.All)
{
    <div>
        <label>
            Product: @Model.Product.Name
        </label>

        <button class="btn btn-primary" type="button" onclick="location.href='@Url.ActionLink("AddToRefrigerator", "Cooker", @Model.Product)'">Add</button>
        <button class="btn btn-primary" type="button" onclick="location.href='@Url.ActionLink("TakeFromRefrigerator", "Cooker", @Model.Product)'">Take</button>
    </div>
}

@if (@Model.ProductAction is ProductAction.Add)
{
    @using (Html.BeginForm(actionName: "CreateProductItem", controllerName: "Cooker", FormMethod.Post))
    {
        <input type="hidden" name="ProductId" value="@Model.Product?.Id">
        <input type="hidden" name="ProductName" value="@Model.Product?.Name">
        <input type="hidden" name="UnitType" value="@Model.Product?.UnitType">
        <div class="row">
            <div class="col">
                Product:
            </div>
            <div class="col">
                <input name="ProductName" type="text" class="form-control" value="@Model.Product?.Name" disabled="disabled">
            </div>
        </div>
        <div class="row">
            <div class="col">Unit:</div>
            <div class="col">
                <select class="form-select" value="" name="UnitId">
                    @foreach (UnitModel optionName in @Model.Units)
                    {
                        <option value=@optionName.Id>@optionName.Id (@optionName.Name)</option>
                    }
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col">Amount:</div>
            <div class="col">
                <input name="Amount" type="text" class="form-control" value="@Model.ProductItem?.Amount">
            </div>
        </div>
        <div class="row">
            <div class="col">Creating Date:</div>
            <div class="col">
                <input name="CreatingDate" type="date" class="form-control" value="Temporal.Now.plainDateISO().toString()">
            </div>
        </div>
        <div>
            <button class="btn btn-primary" type="submit">Add</button>
        </div>
    }
}

@if (@Model.ProductAction is ProductAction.TakePartOf)
{
    @using (Html.BeginForm(actionName: "TakePartOfProduct", controllerName: "Cooker", FormMethod.Post))
    {
        <input type="hidden" name="ProductId" value="@Model.Product?.Id">
        <input type="hidden" name="ProductName" value="@Model.Product?.Name">
        <input type="hidden" name="UnitType" value="@Model.Product?.UnitType">
        <div class="row">
            <div class="col">
                Product:
            </div>
            <div class="col">
                <input name="ProductName" type="text" class="form-control" value="@Model.Product?.Name" disabled="disabled">
            </div>
        </div>
        <div class="row">
            <div class="col">Unit:</div>
            <div class="col">
                <select class="form-select" value="" name="UnitId">
                    @foreach (UnitModel optionName in @Model.Units)
                    {
                        <option value=@optionName.Id>@optionName.Id (@optionName.Name)</option>
                    }
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col">Count:</div>
            <div class="col">
                <input name="Count" type="text" class="form-control" value="@Model.ProductItem?.Amount">
            </div>
        </div>
        <div>
            <button class="btn btn-primary" type="submit">Take</button>
        </div>
    }
}


@(Html.TableFor<ProductItemModel>(@Model.ProductItems, key =>
{
    var builder = new HtmlContentBuilder();
    builder.AppendHtml(Html.ActionLink("write off", "WriteOffProductItem", "Cooker", 
                                        new { productId = @Model.Product?.Id, productName = @Model.Product?.Name, unitType = @Model.Product?.UnitType, productItemId = key }));
    builder.AppendHtml("&nbsp");
    builder.AppendHtml(Html.ActionLink("delete", "DeleteProductItem", "Cooker", 
                                        new { productId = @Model.Product?.Id, productName = @Model.Product?.Name, unitType = @Model.Product?.UnitType, productItemId = key }));
    return builder;
}))