@using FoodManager.WebUI.Areas.Administrator.Contracts;
@using FoodManager.WebUI.Areas.Administrator.Models;
@using FoodManager.WebUI.Extensions;
@model UserIndexModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Accounts";
    var isUpdateMode = Model.User != null;
}

@functions
{
    string GetSelectedIfEqual(string val1, string val2)
    {
        if ((val1 != null) && (val1.Equals(val2)))
        {
            return "selected";
        }

        return string.Empty;
    }

    string GetSuccessAlertClassIfTrue(bool isError)
    {
        if (isError)
        {
            return "alert-danger";
        }
        return "alert-success";
    }
}
@if (!string.IsNullOrEmpty(@TempData["Message"]?.ToString()))
{
    <div id="alert-message" class="alert @GetSuccessAlertClassIfTrue(bool.Equals(true, @TempData["IsError"]))" role="alert">@TempData["Message"]</div>
}
@(
    Html.TableFor<UserModel>(@Model.Users, (key) =>
        {
            return Html.ActionLink("disable", "Disable", "Administrator", new { id = key });
        },
        (key) =>
        {
            return Html.ActionLink("edit", "Update", "Administrator", new { id = key });
        })
)
@using (Html.BeginForm(actionName: (isUpdateMode ? "Update" : "Create"), controllerName: "Administrator", FormMethod.Post))
{
    <input type="hidden" name="Id" value="@Model.User?.Id">
    <div class="row">
        <div class="col">
            Login:
        </div>
        <div class="col">
            @if (isUpdateMode)
            {
                <input name="LoginName" type="text" class="form-control" value="@Model.User?.LoginName" disabled>
            }
            else
            {
                <input name="LoginName" type="text" class="form-control" value="@Model.User?.LoginName">
            }
        </div>
    </div>
    <div class="row">
        <div class="col">First Name:</div>
        <div class="col">
            <input name="FirstName" type="text" class="form-control" value="@Model.User?.FirstName">
        </div>
    </div>
    <div class="row">
        <div class="col">Last Name:</div>
        <div class="col">
            <input name="LastName" type="text" class="form-control" value="@Model.User?.LastName">
        </div>
    </div>
    <div class="row">
        <div class="col">Role:</div>
        <div class="col">
            <select class="form-select" value="" name="Role">
                @foreach (string optionName in new[] { "Administrator", "Cooker", "Manager" })
                {
                    <option @GetSelectedIfEqual(optionName, @Model.User?.Role)>
                        @optionName
                    </option>
                }
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col">Email:</div>
        <div class="col">
            <input name="Email" type="email" class="form-control" value="@Model.User?.Email">
        </div>
    </div>
    <div>
        @if (isUpdateMode)
        {
            <button class="btn btn-primary" type="submit">Update</button>
            <button class="btn btn-secondary" type="button" onclick="location.href='@Url.ActionLink("Index","Administrator")'">Cancel</button>
        }
        else
        {
            <button class="btn btn-primary" type="submit">Create</button>
        }
    </div>
}


